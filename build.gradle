description = "Spock Framework"

libs = [
  ant: "org.apache.ant:ant:1.8.1", // use same version as Groovy 1.7
  asm: "asm:asm:3.2", // use same version as Groovy 1.7
  cglib: "cglib:cglib-nodep:2.2",
  easymock: "org.easymock:easymock:3.0",
  groovy: "org.codehaus.groovy:groovy-all:1.7.10",
  h2database: "com.h2database:h2:1.2.147",
  hamcrest_core: "org.hamcrest:hamcrest-core:1.2",
  jmock: "org.jmock:jmock:2.5.1",
  jmock_junit4: "org.jmock:jmock-junit4:2.5.1",
  junit: "junit:junit-dep:4.9",
  log4j: "log4j:log4j:1.2.16",
  mockito: "org.mockito:mockito-all:1.8.5",
  objenesis: "org.objenesis:objenesis:1.2",
  slf4j: "org.slf4j:slf4j-log4j12:1.5.5"
]

allprojects {
  group = "org.spockframework"
  
  // Whenever this is changed, also need to change the version information in 
  // SpockGrailsPlugin.groovy and BuildConfig.groovy in the Grails plugin to stay in sync.
  version = "0.6-groovy-1.7-SNAPSHOT"

  apply from: profile("common")

  repositories {
    mavenCentral()
    if (isSnapshotVersion) {
      mavenRepo(url: "http://snapshots.repository.codehaus.org")
    }
  }
  
  apply plugin: "idea"
  apply plugin: "eclipse"
  apply plugin: "groovy"
  apply plugin: "signing"
  
  sourceCompatibility = 1.5
  targetCompatibility = 1.5

  signing {
    sign configurations.archives
    required = !isSnapshotVersion
  
    // workaround GRADLE-2091 (can remove for gradle 1.0-milestone-8)
    tasks.withType(org.gradle.plugins.signing.Sign) { it.required !isSnapshotVersion }
  }

  configurations {
    all*.exclude module: "junit" // we use junit-dep instead
  }

  dependencies {
    groovy libs.groovy
  }

  javadoc {
    include "spock/**"
    configure(options) {
      links "http://download.oracle.com/javase/1.5.0/docs/api/"
      links "http://groovy.codehaus.org/gapi"
      links "http://kentbeck.github.com/junit/javadoc/4.9"
      links "http://www.jarvana.com/jarvana/inspect/org/hamcrest/hamcrest-core/1.2/hamcrest-core-1.2-javadoc.jar"
    }
  }

  tasks.withType(Compile) { task ->
    options.useAnt = false
  }

  task sourcesJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar) {
    classifier "javadoc"
    from javadoc
  }

  artifacts {
    archives sourcesJar, javadocJar
  }
}

idea {
  project {
    jdkName "1.6"
    ipr {
      withXml { provider ->
        def node = provider.asNode()
        node.component.find { it.'@name' == 'VcsDirectoryMappings' }?.mapping[0].'@vcs' = 'Git'
        node.append(new XmlParser().parse(file("ideaCodeStyle.xml")))
      }
    }
  }
}

File profile(String name) {
  project.file("gradle/${name}.gradle")
}

task wrapper(type: Wrapper) {
  gradleVersion = "1.0-milestone-8a"
}
