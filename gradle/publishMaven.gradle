apply plugin: "maven"

basePom = {
  project {
    name project.displayName
    description project.description
    url "http://spockframework.org"

    licenses {
      license {
        name "The Apache Software License, Version 2.0"
        url "http://www.apache.org/licenses/LICENSE-2.0.txt"
        distribution "repo"
      }
    }

    scm {
      connection "scm:git:git://github.com/spockframework/spock.git"
      developerConnection "scm:git:ssh://git@github.com/spockframework/spock.git"
      url "http://github.spockframework.org/spock"
    }

    developers {
      developer {
        id "pniederw"
        name "Peter Niederwieser"
        email "pniederw@gmail.com"
      }

      developer {
        id "ldaley"
        name "Luke Daley"
        email "ld@ldaley.com"
      }
    }
  }
}

project.deployers = []
install {
  project.deployers << repositories.mavenInstaller {
    pom basePom
  }
}

// This adds auth credentials to the repository, only if it's going to be needed.
// Prevents the build failing for non releasers.
addAuthentication = { task, repository ->
  gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(task)) {
      repository.authentication(userName: sonatypeOssUsername, password: sonatypeOssPassword)
    }
  }
}

uploadArchives { task ->
  project.deployers << repositories.mavenDeployer {
    pom basePom
    if (isSnapshotVersion) {
      snapshotRepository(url: "file:///var/www/m2repo/snapshots")
    } else {
      repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
        addAuthentication(task, delegate)
      }
    }
  }
}

project.poms = project.deployers*.pom

modifyPom = { Closure modification ->
  project.poms.each { 
    it.whenConfigured(modification) 
  }
}

def optionalDeps = []

optional = { optionalDeps << it }

modifyPom { pom ->
  optionalDeps.each { dep ->
    pom.dependencies.find { it.artifactId == dep.name }.optional = true
  }
}

deployers*.beforeDeployment { signing.signPom(it) }
